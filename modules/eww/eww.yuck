(defwidget left_bar []
  (centerbox :orientation "v" :halign "center"
    (workspaces)
    (systray :orientation "v" :spacing 3 :space-evenly true)
    (sidestuff)))

(defwidget bottom_bar []
  (centerbox :orientation "h"
    (powermenu)
    (label :text time :halign "center")
    (music)))

(defwidget powermenu []
  (box :class "powermenu"
       :orientation "h"
       :halign "start"
       :spacing 24
    (button :onclick "systemctl poweroff" "‚èª")
    (button :onclick "systemctl reboot" "Û∞úâ")
    (button :onclick "systemctl hibernate" "‚èæ")
    (button :onclick "systemctl suspend" "ÔÅå"))
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "v" :space-evenly false
    (metric :label {volume == 0 ? "Óª® " : "ÔÄ® "}
            :value volume
            :onchange "amixer sset Master {}%")
    (metric :label "ÓøÖ "
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "Ôíº "
            :value {EWW_CPU.avg}
            :onchange "")
    (metric :label "üíæ"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")))

(defwidget tray []
  (systray  :class "tray"
            :orientation "h"
            :spacing 3))

(defwidget workspaces []
  (box :class "workspaces"
      :orientation "v"
      :space-evenly true
      :valign "start"
      :spacing 9
    (for entry in "[1, 2, 3, 4, 5, 6, 7, 8, 9]"
      (button :css {entry == active_workspace ? "button {color: white;}" : ""} :onclick "hyprctl dispatch workspace ${entry}" entry))))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "end"
    {music != "" ? "üéµ ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "v"
       :class "metric"
       :space-evenly false
       :halign "center"
    (scale :min 0
           :max 101
           :flipped true
           :orientation "v"
           :active {onchange != ""}
           :value value
           :onchange onchange)
    (box :class "label" label)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "300ms"
  "amixer sget Master | awk -F '[^0-9]+' '/Left:/{print $3}'")

(defpoll time :interval "1s"
  "date '+%H:%M:%S %b %d, %Y'")

(defpoll active_workspace :interval "300ms"
  "hyprctl activeworkspace | awk -F '[^0-9]+' '/ID/{print $3}'")

(defwindow left_bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "3px"
                      :height "90%"
                      :anchor "top left")
  :reserve (struts :side "left" :distance "4%")
  (left_bar))

(defwindow bottom_bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "3px"
                      :anchor "bottom center")
  :reserve (struts :side "bottom" :distance "4%")
  (bottom_bar))
